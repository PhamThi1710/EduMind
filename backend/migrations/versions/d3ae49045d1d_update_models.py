"""update models

Revision ID: d3ae49045d1d
Revises: 9e6ada106013
Create Date: 2024-11-30 15:12:01.902018

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd3ae49045d1d'
down_revision: Union[str, None] = '9e6ada106013'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('modules',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('lesson_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.Text(), nullable=True),
    sa.Column('objectives', sa.ARRAY(sa.String()), nullable=True),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quiz_exercises',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('module_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('status', postgresql.ENUM(name="statustype", create_type=False), nullable=False),
    sa.Column('difficulty', sa.Enum('easy', 'medium', 'hard', name='difficultylevel'), nullable=False),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('questions', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['module_id'], ['modules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('recommendDocuments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('module_id', sa.UUID(), nullable=False),
    sa.Column('content', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['module_id'], ['modules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('lessons', sa.Column('lesson_type', postgresql.ENUM(name="lessontype", create_type=False), nullable=False, server_default='original'))
    op.add_column('lessons', sa.Column('status', postgresql.ENUM(name="statustype", create_type=False), nullable=False, server_default='new'))
    op.add_column('lessons', sa.Column('progress', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('lessons', sa.Column('learning_outcomes', sa.ARRAY(sa.String()), nullable=True))
    op.add_column('lessons', sa.Column('recommended_content', sa.Text(), nullable=True))
    op.add_column('lessons', sa.Column('explain', sa.Text(), nullable=True))
    op.alter_column('student_lessons', 'lesson_type',
               existing_type=postgresql.ENUM('original', 'recommended', name='lessontype'),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('student_lessons', 'lesson_type',
               existing_type=postgresql.ENUM('original', 'recommended', name='lessontype'),
               nullable=True)
    op.drop_column('lessons', 'explain')
    op.drop_column('lessons', 'recommended_content')
    op.drop_column('lessons', 'learning_outcomes')
    op.drop_column('lessons', 'progress')
    op.drop_column('lessons', 'status')
    op.drop_column('lessons', 'lesson_type')
    op.drop_table('recommendDocuments')
    op.drop_table('quiz_exercises')
    op.drop_table('modules')
    # ### end Alembic commands ###
